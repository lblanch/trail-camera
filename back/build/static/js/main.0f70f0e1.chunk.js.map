{"version":3,"sources":["components/LoginForm.js","components/Header.js","services/recordings.js","components/Dashboard.js","components/Notification.js","services/auth.js","App.js","index.js"],"names":["LoginForm","loginUser","useState","show","setShow","submitLoginForm","event","a","preventDefault","target","elements","email","password","credentials","value","name","onSubmit","id","variant","type","placeholder","onClick","UserMenu","user","logout","logoutHandler","alignItems","justifyContent","as","Button","rounded","cursor","minW","size","src","role","p","Header","loading","isLoaded","bg","useColorModeValue","px","h","baseUrl","getInitialRecordings","axios","get","response","data","recordingsServices","getRecordingsByPage","page","Recording","dayIndex","index","recording","maxW","w","boxShadow","overflow","mt","mx","mb","pos","mediaThumbnailURL","layout","color","fontSize","fontFamily","Date","mediaDate","toLocaleTimeString","spacing","Object","entries","emailBody","map","k","v","icon","FaCircle","FaThermometerHalf","FaCalendarAlt","FaClock","justify","py","tags","tag","colorScheme","boxSize","FaTag","_id","DayRecordings","dayRecordings","date","toLocaleDateString","minChildWidth","recordings","Dashboard","setRecordings","setLoading","setPage","isLastPage","setIsLastPage","observer","useRef","lastRecordingRef","useCallback","lastRecording","current","disconnect","IntersectionObserver","isIntersecting","prevPageNumber","observe","useEffect","fetchRecordings","responseRecordings","count","prevRecordings","prevRecordingsLength","length","newRecording","concat","slice","error","console","log","dayRecording","height","ref","Notification","message","loginServices","login","post","auth","AppSwitch","path","to","App","setUser","userLoading","setUserLoading","setMessage","authServices","responseUser","fetchAuthData","loggedUser","logoutUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAkDeA,EA/CG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAe,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACtBD,EAAME,iBADgB,EAIMF,EAAMG,OAAOC,SAAjCC,EAJc,EAIdA,MAAOC,EAJO,EAIPA,SACTC,EAAc,CAClBF,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAGrBH,EAAMG,MAAQ,GACdF,EAASE,MAAQ,GAXK,SAahBb,EAAUY,GAbM,2CAAH,sDAgBrB,OACE,cAAC,IAAD,UACE,uBAAME,KAAK,aAAaC,SAAUX,EAAlC,UACE,eAAC,IAAD,CAAaY,GAAG,QAAhB,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,CAAOC,QAAQ,UAAUH,KAAK,QAAQI,KAAK,OAAOC,YAAY,aAEhE,eAAC,IAAD,CAAaH,GAAG,WAAhB,UACE,cAAC,IAAD,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,QAAQ,UAAUH,KAAK,WAAWI,KAAMhB,EAAO,OAAS,WAAYiB,YAAY,aACvF,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,QAhCO,WACzBjB,GAASD,IA+BC,SACGA,EAAO,OAAS,iBAKzB,cAAC,IAAD,CAAQe,QAAQ,QAAQH,KAAK,eAAeI,KAAK,SAAjD,yB,iFCvCFG,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAElBC,EAAa,uCAAG,sBAAAlB,EAAA,sEACdiB,IADc,2CAAH,qDAInB,OACE,eAAC,IAAD,CAAME,WAAY,SAAUC,eAAgB,gBAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEZ,KAAK,cACLa,GAAIC,IACJC,QAAS,OACTZ,QAAS,OACTa,OAAQ,UACRC,KAAM,EANR,SAOE,cAAC,IAAD,CACEjB,KAAMQ,EAAKR,KACXkB,KAAM,KACNC,IAAK,OAGT,eAAC,IAAD,CAAUnB,KAAK,YAAf,UACkB,UAAdQ,EAAKY,KAAmB,cAAC,IAAD,uBAAgC,6BAC1D,cAAC,IAAD,sBACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAUpB,KAAK,cAAcM,QAASI,EAAtC,0BAGJ,cAAC,IAAD,CAAKW,EAAG,EAAR,SACE,cAAC,IAAD,UAAQb,EAAKR,aAoBNsB,EAdA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASf,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OACE,cAAC,IAAD,CAAUe,UAAWD,EAArB,SACE,cAAC,IAAD,CAAKvB,KAAK,aAAayB,GAAIC,YAAkB,WAAY,YAAaC,GAAI,EAA1E,SACE,eAAC,IAAD,CAAMC,EAAG,GAAIjB,WAAY,SAAUC,eAAgB,gBAAnD,UACE,cAAC,IAAD,UAAU,aACV,cAAC,IAAD,IACW,OAATJ,EAAgB,cAAC,EAAD,CAAUA,KAAMA,EAAMC,OAAQA,IAAa,qC,uFC9CjEoB,EAAU,kBAEVC,EAAoB,uCAAG,4BAAAtC,EAAA,sEACJuC,IAAMC,IAAIH,GADN,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAYXC,EAFY,CAAEC,oBALJ,uCAAG,WAAOC,GAAP,eAAA7C,EAAA,sEACHuC,IAAMC,IAAN,UAAaH,EAAb,YAAwBQ,IADrB,cACpBJ,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKyBJ,wBCL5CQ,EAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACpC,OACE,cAAC,IAAD,CAAQzC,KAAI,oBAAeuC,EAAf,YAA2BC,GAAvC,SACE,eAAC,IAAD,CAAKE,KAAM,QAASC,EAAG,OAAQlB,GAAIC,YAAkB,QAAS,YAAakB,UAAW,MAAO7B,QAAS,KAAMM,EAAG,EAAGwB,SAAU,SAA5H,UACE,cAAC,IAAD,CAAKpB,GAAI,WAAYqB,IAAK,EAAGC,IAAK,EAAGC,GAAI,EAAGC,IAAK,WAAjD,SACE,cAAC,IAAD,CAAOjD,KAAI,oBAAeuC,EAAf,YAA2BC,GAASrB,IAAKsB,EAAUS,kBAAmBC,OAAQ,WAE3F,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,MAAO1B,YAAkB,WAAY,SAAU2B,SAAU,MAAOC,WAAY,OAArF,SACG,IAAIC,KAAKd,EAAUe,WAAWC,uBAEjC,cAAC,IAAD,CAAMzD,KAAI,eAAUuC,EAAV,YAAsBC,GAASkB,QAAS,EAAlD,SAEIC,OAAOC,QAAQnB,EAAUoB,WAAWC,KAAI,YAAa,IAAD,mBAAVC,EAAU,KAAPC,EAAO,KAC9CC,EAAOC,IAQX,MAPU,gBAANH,EACFE,EAAOE,IACQ,SAANJ,EACTE,EAAOG,IACQ,SAANL,IACTE,EAAOI,KAGP,eAAC,IAAD,WACE,cAAC,IAAD,CAAUxD,GAAIoD,EAAMb,MAAM,cAC1B,8BAAIW,EAAJ,OAFF,IAEeC,IAFAD,WASzB,cAAC,IAAD,CAAML,QAAQ,OAAOY,QAAQ,OAAOC,GAAI,EAAxC,SAEI9B,EAAU+B,KAAKV,KAAI,SAACW,GAClB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKtE,QAAQ,SAASuE,YAAaD,EAAIrB,MAAvC,UACE,cAAC,IAAD,CAAauB,QAAQ,OAAO9D,GAAI+D,MAChC,cAAC,IAAD,UAAWH,EAAIA,MACf,cAAC,IAAD,QAJWA,EAAII,gBAgB7BC,EAAgB,SAAC,GAAiC,IAA/BvC,EAA8B,EAA9BA,SAAUwC,EAAoB,EAApBA,cACjC,OACE,eAAC,IAAD,CAAK/E,KAAI,qBAAgBuC,GAAYlB,EAAG,EAAxC,UACE,cAAC,IAAD,UAAW,IAAIkC,KAAKwB,EAAcC,MAAMC,uBACxC,cAAC,IAAD,CAAYC,cAAc,QAAQxB,QAAQ,OAAOa,GAAI,EAArD,SAEIQ,EAAcI,WAAWrB,KAAI,SAACrB,EAAWD,GACvC,OACE,cAAC,EAAD,CAAWD,SAAUA,EAAUC,MAAOA,EAAOC,UAAWA,GAAgBA,EAAUoC,cAkGjFO,EAzFG,WAChB,MAAoCjG,mBAAS,IAA7C,mBAAOgG,EAAP,KAAmBE,EAAnB,KACA,EAA8BlG,oBAAS,GAAvC,mBAAOoC,EAAP,KAAgB+D,EAAhB,KACA,EAAwBnG,mBAAS,GAAjC,mBAAOkD,EAAP,KAAakD,EAAb,KACA,EAAoCpG,oBAAS,GAA7C,mBAAOqG,EAAP,KAAmBC,EAAnB,KAEMC,EAAWC,mBACXC,EAAmBC,uBAAY,SAACC,GAChCvE,IAIAmE,EAASK,SACXL,EAASK,QAAQC,aAGnBN,EAASK,QAAU,IAAIE,sBAAqB,SAAArC,GACtCA,EAAQ,GAAGsC,iBAAmBV,GAChCD,GAAQ,SAAAY,GAAc,OAAIA,EAAiB,QAI3CL,GACFJ,EAASK,QAAQK,QAAQN,MAE1B,CAACvE,EAASiE,IAgDb,OA9CAa,qBAAU,WACR,IAAMC,EAAe,uCAAG,4BAAA9G,EAAA,+EAEa2C,EAAmBC,oBAAoBC,GAFpD,OAGa,KAD3BkE,EAFc,QAGGC,OACrBnB,GAAc,SAACoB,GACb,IAAMC,EAAuBD,EAAeE,OAC5C,GAA4B,IAAzBD,EACD,MAAO,CAACH,GAIV,GAAIE,EAAeC,EAAuB,GAAG1B,OAASuB,EAAmBvB,KAAM,CAC7E,IAAM4B,EAAe,CACnB/B,IAAK4B,EAAeC,EAAuB,GAAG7B,IAC9C2B,MAAOC,EAAeC,EAAuB,GAAGF,MAAQD,EAAmBC,MAC3ExB,KAAMuB,EAAmBvB,KACzBG,WAAYsB,EAAeC,EAAuB,GAAGvB,WAAW0B,OAAON,EAAmBpB,aAG5F,MAAM,GAAN,mBAAWsB,EAAeK,MAAM,GAAI,IAApC,CAAwCF,IAExC,MAAM,GAAN,mBAAWH,GAAX,CAA2BF,OAG/Bd,GAAc,IAEdA,GAAc,GA1BI,gDA6BjB,KAAMxD,SACH,KAAMA,SAASC,KAAK6E,MACtBC,QAAQC,IAAI,KAAMhF,SAASC,KAAK6E,OAEhCC,QAAQC,IAAI,KAAMhF,SAASC,MAE7B8E,QAAQC,IAAR,MAnCkB,yBAsCpB3B,GAAW,GAtCS,4EAAH,qDAyCrBA,GAAW,GACXgB,MACC,CAACjE,IAGF,qCAEI8C,EAAWrB,KAAI,SAACoD,EAAc1E,GAC5B,OACE,cAAC,EAAD,CAAuCD,SAAUC,EAAOuC,cAAemC,GAAnDA,EAAarC,QAIvC,cAAC,IAAD,CAAUrD,UAAWD,EAAS4F,OAAO,OAArC,SACE,qBAAKC,IAAKxB,EAAV,SAAsC,IAATvD,IAA6B,IAAfmD,GAAuB,qBCnJ3D6B,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,GAAuC,IAAnBA,EAAQX,OACvB,KAIP,qBAAK3G,KAAK,eAAV,SACGsH,KCPDzF,EAAU,YAmBD0F,EAFO,CAAEC,MAfb,uCAAG,WAAO1H,GAAP,eAAAN,EAAA,sEACWuC,IAAM0F,KAAN,UAAc5F,EAAd,UAA+B/B,GAD1C,cACNmC,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDAeoBzB,OAVnB,uCAAG,4BAAAjB,EAAA,sEACUuC,IAAM0F,KAAN,UAAc5F,EAAd,YADV,cACPI,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAU2BwF,KAL7B,uCAAG,4BAAAlI,EAAA,sEACYuC,IAAMC,IAAIH,GADtB,cACLI,EADK,yBAEJA,EAASC,MAFL,2CAAH,sDCJJyF,EAAY,SAAC,GAAD,IAAGnH,EAAH,EAAGA,KAAMtB,EAAT,EAASA,UAAT,OAChB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0I,KAAK,SAAZ,SACa,OAATpH,EACE,cAAC,EAAD,CAAWtB,UAAWA,IACtB,cAAC,IAAD,CAAU2I,GAAG,iBAGnB,cAAC,IAAD,CAAOD,KAAK,aAAZ,SACa,OAATpH,EACE,cAAC,IAAD,CAAUqH,GAAG,WACb,cAAC,EAAD,MAGN,cAAC,IAAD,UACa,OAATrH,EACE,cAAC,IAAD,CAAUqH,GAAG,WACb,cAAC,IAAD,CAAUA,GAAG,qBA0ERC,GApEH,WACV,MAAwB3I,mBAAS,MAAjC,mBAAOqB,EAAP,KAAauH,EAAb,KACA,EAAsC5I,oBAAS,GAA/C,mBAAO6I,EAAP,KAAoBC,EAApB,KACA,EAA8B9I,mBAAS,IAAvC,mBAAOmI,EAAP,KAAgBY,EAAhB,KAEA7B,qBAAU,YACW,uCAAG,4BAAA7G,EAAA,+EAES2I,EAAaT,OAFtB,OAEZU,EAFY,OAGlBL,EAAQK,GAHU,gDAKf,KAAMnG,SACH,KAAMA,SAASC,KAAK6E,MACtBC,QAAQC,IAAI,KAAMhF,SAASC,KAAK6E,OAEhCC,QAAQC,IAAI,KAAMhF,SAASC,MAE7B8E,QAAQC,IAAR,MAXgB,yBAclBgB,GAAe,GAdG,4EAAH,qDAkBnBI,KACC,IAEH,IAAMnJ,EAAS,uCAAG,WAAOY,GAAP,eAAAN,EAAA,6DAChByI,GAAe,GADC,kBAGWE,EAAaX,MAAM1H,GAH9B,OAGRwI,EAHQ,OAIdP,EAAQO,GACRJ,EAAW,IALG,gDAOV,KAAMjG,SAASC,KAAK6E,MACtBmB,EAAW,KAAMjG,SAASC,KAAK6E,OAE/BmB,EAAW,KAAMjG,SAASC,MAVd,yBAYd+F,GAAe,GAZD,4EAAH,sDAgBTM,EAAU,uCAAG,sBAAA/I,EAAA,+EAET2I,EAAa1H,SAFJ,OAGfsH,EAAQ,MACRG,EAAW,qBAJI,gDAMX,KAAMjG,SAASC,KAAK6E,MACtBmB,EAAW,KAAMjG,SAASC,KAAK6E,OAE/BmB,EAAW,KAAMjG,SAASC,MATb,yDAAH,qDAahB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQX,QAASyG,EAAaxH,KAAMA,EAAMC,OAAQ8H,IAClD,cAAC,EAAD,CAAcjB,QAASA,IACrBU,EACE,cAAC,IAAD,CAAUb,OAAO,SACjB,cAAC,EAAD,CAAW3G,KAAMA,EAAMtB,UAAWA,QCzF5CsJ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.0f70f0e1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { VStack, Input, InputGroup, InputRightElement, Button, FormLabel, FormControl } from '@chakra-ui/react'\n\nconst LoginForm = ({ loginUser }) => {\n  const [show, setShow] = useState(false)\n\n  const handleShowPassword = () => {\n    setShow(!show)\n  }\n\n  const submitLoginForm = async (event) => {\n    event.preventDefault()\n\n    //event.target.email.value would not work when testing\n    const { email, password } = event.target.elements\n    const credentials = {\n      email: email.value,\n      password: password.value\n    }\n\n    email.value = ''\n    password.value = ''\n\n    await loginUser(credentials)\n  }\n\n  return (\n    <VStack>\n      <form name=\"login-form\" onSubmit={submitLoginForm}>\n        <FormControl id=\"email\">\n          <FormLabel>Email</FormLabel>\n          <Input variant=\"outline\" name=\"email\" type=\"text\" placeholder=\"Email\" />\n        </FormControl>\n        <FormControl id=\"password\">\n          <FormLabel>Password</FormLabel>\n          <InputGroup>\n            <Input variant=\"outline\" name=\"password\" type={show ? 'text' : 'password'} placeholder=\"Password\" />\n            <InputRightElement>\n              <Button onClick={handleShowPassword}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Button variant=\"solid\" name=\"login-button\" type=\"submit\">Login</Button>\n      </form>\n    </VStack>\n  )\n}\n\nexport default LoginForm","import React from 'react'\nimport { Skeleton, Box, Flex, Menu, MenuButton, Avatar, Heading,\n  MenuList, MenuItem, Button, useColorModeValue, Text, Spacer,\n  MenuDivider } from '@chakra-ui/react'\n\nconst UserMenu = ({ user, logout }) => {\n\n  const logoutHandler = async () => {\n    await logout()\n  }\n\n  return (\n    <Flex alignItems={'center'} justifyContent={'space-between'}>\n      <Menu>\n        <MenuButton\n          name=\"user-avatar\"\n          as={Button}\n          rounded={'full'}\n          variant={'link'}\n          cursor={'pointer'}\n          minW={0}>\n          <Avatar\n            name={user.name}\n            size={'sm'}\n            src={''}\n          />\n        </MenuButton>\n        <MenuList name=\"user-menu\">\n          { user.role === 'admin' ? <MenuItem>Settings</MenuItem> : <></> }\n          <MenuItem>Profile</MenuItem>\n          <MenuDivider/>\n          <MenuItem name=\"user-logout\" onClick={logoutHandler}>Logout</MenuItem>\n        </MenuList>\n      </Menu>\n      <Box p={3}>\n        <Text>{ user.name }</Text>\n      </Box>\n    </Flex>\n  )\n}\n\nconst Header = ({ loading, user, logout }) => {\n  return (\n    <Skeleton isLoaded={!loading}>\n      <Box name=\"app-header\" bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <Heading>{'TrailCam'}</Heading>\n          <Spacer/>\n          { user !== null ? <UserMenu user={user} logout={logout} /> : <></> }\n        </Flex>\n      </Box>\n    </Skeleton>\n  )\n}\n\nexport default Header","import axios from 'axios'\n\nconst baseUrl = '/api/recordings'\n\nconst getInitialRecordings = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getRecordingsByPage = async (page) => {\n  const response = await axios.get(`${baseUrl}/${page}`)\n  return response.data\n}\n\nconst recordingsServices = { getRecordingsByPage, getInitialRecordings }\n\nexport default recordingsServices","import { Skeleton, Box, useColorModeValue, SimpleGrid, Heading,\n  Image, List, ListItem, ListIcon, Center, Stack, Tag,\n  TagLabel, TagLeftIcon, TagCloseButton, Wrap, WrapItem } from '@chakra-ui/react'\nimport { FaThermometerHalf, FaClock, FaCalendarAlt,\n  FaCircle, FaTag } from 'react-icons/fa'\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\n\nimport recordingsServices from '../services/recordings'\n\nconst Recording = ({ dayIndex, index, recording }) => {\n  return(\n    <Center name={`recording-${dayIndex}-${index}`}>\n      <Box maxW={'445px'} w={'full'} bg={useColorModeValue('white', 'gray.900')} boxShadow={'2xl'} rounded={'md'} p={4} overflow={'hidden'}>\n        <Box bg={'gray.100'} mt={-6} mx={-6} mb={6} pos={'relative'}>\n          <Image name={`thumbnail-${dayIndex}-${index}`} src={recording.mediaThumbnailURL} layout={'fill'} />\n        </Box>\n        <Stack>\n          <Heading color={useColorModeValue('gray.700', 'white')} fontSize={'2xl'} fontFamily={'body'}>\n            {new Date(recording.mediaDate).toLocaleTimeString()}\n          </Heading>\n          <List name={`info-${dayIndex}-${index}`} spacing={3}>\n            {\n              Object.entries(recording.emailBody).map(([k, v]) => {\n                let icon = FaCircle\n                if (k === 'temperature') {\n                  icon = FaThermometerHalf\n                } else if (k === 'date') {\n                  icon = FaCalendarAlt\n                } else if (k === 'time') {\n                  icon = FaClock\n                }\n                return (\n                  <ListItem key={k}>\n                    <ListIcon as={icon} color=\"green.500\" />\n                    <b>{k}:</b> {v}\n                  </ListItem>\n                )\n              })\n            }\n          </List>\n        </Stack>\n        <Wrap spacing=\"10px\" justify=\"left\" py={4}>\n          {\n            recording.tags.map((tag) => {\n              return (\n                <WrapItem key={tag._id}>\n                  <Tag variant=\"subtle\" colorScheme={tag.color}>\n                    <TagLeftIcon boxSize=\"12px\" as={FaTag} />\n                    <TagLabel>{tag.tag}</TagLabel>\n                    <TagCloseButton />\n                  </Tag>\n                </WrapItem>\n              )\n            })\n          }\n        </Wrap>\n      </Box>\n    </Center>\n  )\n}\n\nconst DayRecordings = ({ dayIndex, dayRecordings }) => {\n  return (\n    <Box name={`recordings-${dayIndex}`} p={4}>\n      <Heading>{ new Date(dayRecordings.date).toLocaleDateString()}</Heading>\n      <SimpleGrid minChildWidth=\"300px\" spacing=\"40px\" py={4}>\n        {\n          dayRecordings.recordings.map((recording, index) => {\n            return (\n              <Recording dayIndex={dayIndex} index={index} recording={recording} key={recording._id} />\n            )\n          })\n        }\n      </SimpleGrid>\n    </Box>\n  )\n}\n\nconst Dashboard = () => {\n  const [recordings, setRecordings] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [page, setPage] = useState(1)\n  const [isLastPage, setIsLastPage] = useState(true)\n\n  const observer = useRef()\n  const lastRecordingRef = useCallback((lastRecording) => {\n    if (loading) {\n      return\n    }\n\n    if (observer.current) {\n      observer.current.disconnect()\n    }\n\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && !isLastPage) {\n        setPage(prevPageNumber => prevPageNumber + 1)\n      }\n    })\n\n    if (lastRecording) {\n      observer.current.observe(lastRecording)\n    }\n  }, [loading, isLastPage])\n\n  useEffect(() => {\n    const fetchRecordings = async () => {\n      try {\n        const responseRecordings = await recordingsServices.getRecordingsByPage(page)\n        if (responseRecordings.count !== 0) {\n          setRecordings((prevRecordings) => {\n            const prevRecordingsLength = prevRecordings.length\n            if(prevRecordingsLength === 0) {\n              return [responseRecordings]\n            }\n\n            //If received recordings belong to an existing date: merge, otherwise, add at the end of array\n            if (prevRecordings[prevRecordingsLength - 1].date === responseRecordings.date) {\n              const newRecording = {\n                _id: prevRecordings[prevRecordingsLength - 1]._id,\n                count: prevRecordings[prevRecordingsLength - 1].count + responseRecordings.count,\n                date: responseRecordings.date,\n                recordings: prevRecordings[prevRecordingsLength - 1].recordings.concat(responseRecordings.recordings)\n              }\n\n              return [...prevRecordings.slice(0, -1), newRecording]\n            } else {\n              return [...prevRecordings, responseRecordings]\n            }\n          })\n          setIsLastPage(false)\n        } else {\n          setIsLastPage(true)\n        }\n      } catch(error) {\n        if(error.response) {\n          if (error.response.data.error)\n            console.log(error.response.data.error)\n          else\n            console.log(error.response.data)\n        } else {\n          console.log(error)\n        }\n      } finally {\n        setLoading(false)\n      }\n    }\n    setLoading(true)\n    fetchRecordings()\n  }, [page])\n\n  return (\n    <>\n      {\n        recordings.map((dayRecording, index) => {\n          return (\n            <DayRecordings key={dayRecording._id}  dayIndex={index} dayRecordings={dayRecording} />\n          )\n        })\n      }\n      <Skeleton isLoaded={!loading} height=\"20px\">\n        <div ref={lastRecordingRef}>{page === 1 && isLastPage === true && 'No results'}</div>\n      </Skeleton>\n    </>\n  )\n}\n\nexport default Dashboard","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null || message.length === 0) {\n    return null\n  }\n\n  return (\n    <div name=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/auth'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}/login`, credentials)\n  return response.data\n}\n\nconst logout = async () => {\n  const response = await axios.post(`${baseUrl}/logout`)\n  return response.data\n}\n\nconst auth = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst loginServices = { login, logout, auth }\n\nexport default loginServices","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nimport LoginForm from './components/LoginForm'\nimport Header from './components/Header'\nimport Dashboard from './components/Dashboard'\nimport Notification from './components/Notification'\nimport authServices from './services/auth'\nimport { Skeleton } from '@chakra-ui/react'\n\nconst AppSwitch = ({ user, loginUser }) => (\n  <Switch>\n    <Route path=\"/login\">\n      { user === null\n        ? <LoginForm loginUser={loginUser} />\n        : <Redirect to=\"/dashboard\" />\n      }\n    </Route>\n    <Route path=\"/dashboard\">\n      { user === null\n        ? <Redirect to=\"/login\" />\n        : <Dashboard />\n      }\n    </Route>\n    <Route>\n      { user === null\n        ? <Redirect to=\"/login\" />\n        : <Redirect to=\"/dashboard\" />\n      }\n    </Route>\n  </Switch>\n)\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [userLoading, setUserLoading] = useState(true)\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    const fetchAuthData = async () => {\n      try {\n        const responseUser = await authServices.auth()\n        setUser(responseUser)\n      } catch(error) {\n        if(error.response) {\n          if (error.response.data.error)\n            console.log(error.response.data.error)\n          else\n            console.log(error.response.data)\n        } else {\n          console.log(error)\n        }\n      } finally {\n        setUserLoading(false)\n      }\n    }\n\n    fetchAuthData()\n  }, [])\n\n  const loginUser = async (credentials) => {\n    setUserLoading(true)\n    try {\n      const loggedUser = await authServices.login(credentials)\n      setUser(loggedUser)\n      setMessage('')\n    } catch (error) {\n      if (error.response.data.error)\n        setMessage(error.response.data.error)\n      else\n        setMessage(error.response.data)\n    } finally {\n      setUserLoading(false)\n    }\n  }\n\n  const logoutUser = async () => {\n    try {\n      await authServices.logout()\n      setUser(null)\n      setMessage('Logout successful')\n    } catch (error) {\n      if (error.response.data.error)\n        setMessage(error.response.data.error)\n      else\n        setMessage(error.response.data)\n    }\n  }\n\n  return (\n    <Router>\n      <Header loading={userLoading} user={user} logout={logoutUser} />\n      <Notification message={message} />\n      { userLoading\n        ? <Skeleton height=\"50px\" />\n        : <AppSwitch user={user} loginUser={loginUser} />\n      }\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nimport App from './App'\n\nReactDOM.render(\n  <ChakraProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}