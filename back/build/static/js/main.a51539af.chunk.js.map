{"version":3,"sources":["components/LoginForm.js","components/Header.js","services/recordings.js","components/Dashboard.js","components/Recording.js","components/Notification.js","services/auth.js","App.js","index.js"],"names":["LoginForm","loginUser","useState","show","setShow","submitLoginForm","event","a","preventDefault","target","elements","email","password","credentials","value","name","onSubmit","id","variant","type","placeholder","onClick","AvatarNameBox","React","forwardRef","props","ref","as","children","size","src","UserMenu","user","logout","logoutHandler","alignItems","justifyContent","rounded","cursor","minW","role","Header","loading","skeletonReturn","height","headerReturn","sx","position","bg","useColorModeValue","px","h","_hover","textDecoration","href","baseUrl","getInitialRecordings","axios","get","response","data","getRecordingsByPage","page","recordingsServices","RecordingCard","dayIndex","index","recording","Center","maxW","w","boxShadow","p","overflow","mt","mx","mb","pos","mediaThumbnailURL","layout","spacing","FaCalendarAlt","color","RouterLink","to","pathname","_id","state","Date","mediaDate","toLocaleDateString","FaClock","toLocaleTimeString","justify","py","tags","map","tag","colorScheme","boxSize","FaTag","DayRecordings","dayRecordings","date","minChildWidth","recordings","Dashboard","errorHandler","setRecordings","setLoading","setPage","isLastPage","setIsLastPage","observer","useRef","lastRecordingRef","useCallback","lastRecording","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","useEffect","fetchRecordings","responseRecordings","count","prevRecordings","prevRecordingsLength","length","newRecording","concat","slice","dayRecording","isLoaded","RecordingVideo","videoUrl","mediaType","controls","Recording","useLocation","mediaTypeSplit","split","console","log","icon","textAlign","align","mediaURL","alt","direction","base","md","flex","Object","emailBody","k","v","FaCircle","FaThermometerHalf","Notification","message","login","post","auth","loginServices","AppSwitch","path","App","setUser","userLoading","setUserLoading","setMessage","error","status","fetchAuthData","authServices","responseUser","loggedUser","logoutUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a51539af.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { VStack, Input, InputGroup, InputRightElement, Button, FormLabel, FormControl } from '@chakra-ui/react'\n\nconst LoginForm = ({ loginUser }) => {\n  const [show, setShow] = useState(false)\n\n  const handleShowPassword = () => {\n    setShow(!show)\n  }\n\n  const submitLoginForm = async (event) => {\n    event.preventDefault()\n\n    //event.target.email.value would not work when testing\n    const { email, password } = event.target.elements\n    const credentials = {\n      email: email.value,\n      password: password.value\n    }\n\n    email.value = ''\n    password.value = ''\n\n    await loginUser(credentials)\n  }\n\n  return (\n    <VStack>\n      <form name=\"login-form\" onSubmit={submitLoginForm}>\n        <FormControl id=\"email\">\n          <FormLabel>Email</FormLabel>\n          <Input variant=\"outline\" name=\"email\" type=\"text\" placeholder=\"Email\" />\n        </FormControl>\n        <FormControl id=\"password\">\n          <FormLabel>Password</FormLabel>\n          <InputGroup>\n            <Input variant=\"outline\" name=\"password\" type={show ? 'text' : 'password'} placeholder=\"Password\" />\n            <InputRightElement>\n              <Button onClick={handleShowPassword}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n        <Button variant=\"solid\" name=\"login-button\" type=\"submit\">Login</Button>\n      </form>\n    </VStack>\n  )\n}\n\nexport default LoginForm","/* eslint-disable no-dupe-keys */\nimport React from 'react'\nimport { Link, HStack, Skeleton, Box, Flex, Menu, MenuButton, Avatar, Heading,\n  MenuList, MenuItem, useColorModeValue, Text, Spacer,\n  MenuDivider } from '@chakra-ui/react'\n\nconst AvatarNameBox = React.forwardRef((props, ref) => {\n  return (\n    <HStack as=\"button\" name={props.name} onClick={props.onClick} ref={ref}>\n      <Avatar\n        name={props.children.props.children}\n        size={'sm'}\n        src={''}\n      />\n      <Text>{ props.children.props.children }</Text>\n    </HStack>\n  )\n})\n\nconst UserMenu = ({ user, logout }) => {\n\n  const logoutHandler = async () => {\n    await logout()\n  }\n\n  return (\n    <Flex alignItems={'center'} justifyContent={'space-between'}>\n      <Menu>\n        <MenuButton\n          name=\"user-avatar\"\n          as={AvatarNameBox}\n          rounded={'full'}\n          variant={'link'}\n          cursor={'pointer'}\n          minW={0}>\n          {user.name}\n        </MenuButton>\n        <MenuList name=\"user-menu\">\n          { user.role === 'admin' ? <MenuItem>Settings</MenuItem> : <></> }\n          <MenuItem>Profile</MenuItem>\n          <MenuDivider/>\n          <MenuItem name=\"user-logout\" onClick={logoutHandler}>Logout</MenuItem>\n        </MenuList>\n      </Menu>\n    </Flex>\n  )\n}\n\nconst Header = ({ loading, user, logout }) => {\n\n  const skeletonReturn = <Skeleton height=\"20px\" />\n  const headerReturn =\n    <Box sx={{ position: '-webkit-sticky', position: 'sticky', top: 0, 'z-index': 1 }} name=\"app-header\" bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <Heading>\n          <Link _hover={{ textDecoration: 'none' }} href=\"#top\">\n            {'TrailCam'}\n          </Link>\n        </Heading>\n        <Spacer/>\n        { user !== null ? <UserMenu user={user} logout={logout} /> : <></> }\n      </Flex>\n    </Box>\n\n  // Cannot wrap the header inside Skeleton because it causes the position: sticky to not work.\n  if (loading)\n    return skeletonReturn\n  else\n    return headerReturn\n}\n\nexport default Header","import axios from 'axios'\n\nconst baseUrl = '/api/recordings'\n\nconst getInitialRecordings = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getRecordingsByPage = async (page) => {\n  const response = await axios.get(`${baseUrl}/${page}`)\n  return response.data\n}\n\nconst recordingsServices = { getRecordingsByPage, getInitialRecordings }\n\nexport default recordingsServices","import { Link as RouterLink } from 'react-router-dom'\nimport { Center, Skeleton, Box, useColorModeValue, SimpleGrid, Heading,\n  Image, List, ListItem, ListIcon, LinkBox, Tag,\n  TagLabel, TagLeftIcon, TagCloseButton, Wrap, WrapItem,\n  LinkOverlay } from '@chakra-ui/react'\nimport { FaClock, FaCalendarAlt, FaTag } from 'react-icons/fa'\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\n\nimport recordingsServices from '../services/recordings'\n\nconst RecordingCard = ({ dayIndex, index, recording }) => {\n  return(\n    <LinkBox as={Center} name={`recording-${dayIndex}-${index}`}>\n      <Box maxW={'445px'} w={'full'} bg={useColorModeValue('white', 'gray.900')} boxShadow={'2xl'} rounded={'md'} p={4} overflow={'hidden'}>\n        <Box bg={'gray.100'} mt={-6} mx={-6} mb={6} pos={'relative'}>\n          <Image name={`thumbnail-${dayIndex}-${index}`} src={recording.mediaThumbnailURL} layout={'fill'} />\n        </Box>\n        <List name={`info-${dayIndex}-${index}`} spacing={3}>\n          <ListItem>\n            <ListIcon as={FaCalendarAlt} color=\"green.500\" />\n            <LinkOverlay as={RouterLink} to={{ pathname: `/dashboard/${recording._id}`, state: { recording: recording } }}>\n              <b>Date</b> {new Date(recording.mediaDate).toLocaleDateString()}\n            </LinkOverlay>\n          </ListItem>\n          <ListItem>\n            <ListIcon as={FaClock} color=\"green.500\" />\n            <b>Time:</b> {new Date(recording.mediaDate).toLocaleTimeString()}\n          </ListItem>\n        </List>\n        <Wrap spacing=\"10px\" justify=\"left\" py={4}>\n          {\n            recording.tags.map((tag) => {\n              return (\n                <WrapItem key={tag._id}>\n                  <Tag variant=\"subtle\" colorScheme={tag.color}>\n                    <TagLeftIcon boxSize=\"12px\" as={FaTag} />\n                    <TagLabel>{tag.tag}</TagLabel>\n                    <TagCloseButton />\n                  </Tag>\n                </WrapItem>\n              )\n            })\n          }\n        </Wrap>\n      </Box>\n    </LinkBox>\n  )\n}\n\nconst DayRecordings = ({ dayIndex, dayRecordings }) => {\n  return (\n    <Box name={`recordings-${dayIndex}`} p={4}>\n      <Heading>{ new Date(dayRecordings.date).toLocaleDateString()}</Heading>\n      <SimpleGrid minChildWidth=\"300px\" spacing=\"40px\" py={4}>\n        {\n          dayRecordings.recordings.map((recording, index) => {\n            return (\n              <RecordingCard dayIndex={dayIndex} index={index} recording={recording} key={recording._id} />\n            )\n          })\n        }\n      </SimpleGrid>\n    </Box>\n  )\n}\n\nconst Dashboard = ({ errorHandler }) => {\n  const [recordings, setRecordings] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [page, setPage] = useState(1)\n  const [isLastPage, setIsLastPage] = useState(true)\n\n  const observer = useRef()\n  const lastRecordingRef = useCallback((lastRecording) => {\n    if (loading) {\n      return\n    }\n\n    if (observer.current) {\n      observer.current.disconnect()\n    }\n\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && !isLastPage) {\n        setPage(prevPageNumber => prevPageNumber + 1)\n      }\n    })\n\n    if (lastRecording) {\n      observer.current.observe(lastRecording)\n    }\n  }, [loading, isLastPage])\n\n  useEffect(() => {\n    const fetchRecordings = async () => {\n      try {\n        const responseRecordings = await recordingsServices.getRecordingsByPage(page)\n        if (responseRecordings.count !== 0) {\n          setRecordings((prevRecordings) => {\n            const prevRecordingsLength = prevRecordings.length\n            if(prevRecordingsLength === 0) {\n              return [responseRecordings]\n            }\n\n            //If received recordings belong to an existing date: merge, otherwise, add at the end of array\n            if (prevRecordings[prevRecordingsLength - 1].date === responseRecordings.date) {\n              const newRecording = {\n                _id: prevRecordings[prevRecordingsLength - 1]._id,\n                count: prevRecordings[prevRecordingsLength - 1].count + responseRecordings.count,\n                date: responseRecordings.date,\n                recordings: prevRecordings[prevRecordingsLength - 1].recordings.concat(responseRecordings.recordings)\n              }\n\n              return [...prevRecordings.slice(0, -1), newRecording]\n            } else {\n              return [...prevRecordings, responseRecordings]\n            }\n          })\n          setIsLastPage(false)\n        } else {\n          setIsLastPage(true)\n        }\n        setLoading(false)\n      } catch(error) {\n        setIsLastPage(true)\n        setLoading(false)\n        errorHandler(error)\n      }\n    }\n    setLoading(true)\n    fetchRecordings()\n  }, [page, errorHandler])\n\n  return (\n    <>\n      {\n        recordings.map((dayRecording, index) => {\n          return (\n            <DayRecordings key={dayRecording._id}  dayIndex={index} dayRecordings={dayRecording} />\n          )\n        })\n      }\n      <Skeleton isLoaded={!loading} height=\"20px\">\n        <div ref={lastRecordingRef}>{page === 1 && isLastPage === true && 'No results'}</div>\n      </Skeleton>\n    </>\n  )\n}\n\nexport default Dashboard","/* eslint-disable no-dupe-keys */\nimport { Link as RouterLink } from 'react-router-dom'\nimport React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Link, IconButton, Flex, Container, List, Stack, WrapItem,\n  ListItem, ListIcon, Image, Wrap, Tag, TagLeftIcon, TagLabel,\n  TagCloseButton } from '@chakra-ui/react'\nimport { FaArrowLeft, FaTag, FaCircle, FaThermometerHalf, FaCalendarAlt, FaClock } from 'react-icons/fa'\n\nconst RecordingVideo = ({ videoUrl, mediaType }) => {\n  return (\n    <video controls>\n      <source src={videoUrl} type={mediaType}/>\n    </video>\n  )\n}\n\nconst Recording = (props) => {\n  // TODO: if we didn't receive a recording, fetch it from the server with the recording id\n  //const { recordingId } = useParams()\n  const location = useLocation()\n  const { recording } = location.state\n  const mediaTypeSplit = recording.mediaType.split('/')\n  console.log('mediatype: ', recording.mediaType, 'mediatypesplit: ', mediaTypeSplit)\n\n  return (\n    <Container maxW={'5xl'}>\n      <Link as={RouterLink} to=\"/dashboard\">\n        <IconButton aria-label=\"Go back\" icon={<FaArrowLeft />} sx={{ position: '-webkit-sticky', position: 'sticky', top: '80px' }} />\n      </Link>\n      <Stack\n        textAlign={'center'}\n        align={'center'}\n        spacing={10}\n        py={8}>\n        <Flex w={'full'}>\n          { mediaTypeSplit[0] === 'image'\n            ? <Image src={recording.mediaURL} alt=\"Trail camera picture\" />\n            : <RecordingVideo videoUrl={recording.mediaURL} mediaType={recording.mediaType} />\n          }\n        </Flex>\n        <Stack direction={{ base: 'column', md: 'row' }}>\n          <Flex flex={1} textAlign={'left'}>\n            <List spacing={3}>\n              {\n                Object.entries(recording.emailBody).map(([k, v]) => {\n                  let icon = FaCircle\n                  if (k === 'temperature') {\n                    icon = FaThermometerHalf\n                  } else if (k === 'date') {\n                    icon = FaCalendarAlt\n                  } else if (k === 'time') {\n                    icon = FaClock\n                  }\n                  return (\n                    <ListItem key={k}>\n                      <ListIcon as={icon} color=\"green.500\" />\n                      <b>{k}:</b> {v}\n                    </ListItem>\n                  )\n                })\n              }\n            </List>\n          </Flex>\n          <Flex flex={1}>\n            <Wrap spacing=\"10px\" justify=\"left\" py={{ base: 4, md: 0 }}>\n              {\n                recording.tags.map((tag) => {\n                  return (\n                    <WrapItem key={tag._id}>\n                      <Tag variant=\"subtle\" colorScheme={tag.color}>\n                        <TagLeftIcon boxSize=\"12px\" as={FaTag} />\n                        <TagLabel>{tag.tag}</TagLabel>\n                        <TagCloseButton />\n                      </Tag>\n                    </WrapItem>\n                  )\n                })\n              }\n            </Wrap>\n          </Flex>\n        </Stack>\n      </Stack>\n    </Container>\n  )\n}\n\nexport default Recording","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null || message.length === 0) {\n    return null\n  }\n\n  return (\n    <div name=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/auth'\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${baseUrl}/login`, credentials)\n  return response.data\n}\n\nconst logout = async () => {\n  const response = await axios.post(`${baseUrl}/logout`)\n  return response.data\n}\n\nconst auth = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst loginServices = { login, logout, auth }\n\nexport default loginServices","import React, { useState, useEffect, useCallback } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { Skeleton } from '@chakra-ui/react'\n\nimport LoginForm from './components/LoginForm'\nimport Header from './components/Header'\nimport Dashboard from './components/Dashboard'\nimport Recording from './components/Recording'\nimport Notification from './components/Notification'\nimport authServices from './services/auth'\n\nconst AppSwitch = ({ user, loginUser, errorHandler }) => (\n  <Switch>\n    <Route path=\"/login\">\n      { user === null\n        ? <LoginForm loginUser={loginUser} />\n        : <Redirect to=\"/dashboard\" />\n      }\n    </Route>\n    <Route path=\"/dashboard/:recordingId\">\n      { user === null\n        ? <Redirect to=\"/login\" />\n        : <Recording />\n      }\n    </Route>\n    <Route path=\"/dashboard\">\n      { user === null\n        ? <Redirect to=\"/login\" />\n        : <Dashboard errorHandler={errorHandler} />\n      }\n    </Route>\n    <Route>\n      { user === null\n        ? <Redirect to=\"/login\" />\n        : <Redirect to=\"/dashboard\" />\n      }\n    </Route>\n  </Switch>\n)\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [userLoading, setUserLoading] = useState(true)\n  const [message, setMessage] = useState('')\n\n  const errorHandler = useCallback((error) => {\n    if(error.response) {\n      if (error.response.status === 401) {\n        console.log(error.response.data.error)\n        setUser(null)\n      } else {\n        if (error.response.data.error)\n          console.log(error.response.data.error)\n        else\n          console.log(error.response.data)\n      }\n    } else {\n      console.log(error)\n    }\n  }, [])\n\n  useEffect(() => {\n    const fetchAuthData = async () => {\n      try {\n        const responseUser = await authServices.auth()\n        setUser(responseUser)\n      } catch(error) {\n        errorHandler(error)\n      } finally {\n        setUserLoading(false)\n      }\n    }\n\n    fetchAuthData()\n  }, [errorHandler])\n\n  const loginUser = async (credentials) => {\n    setUserLoading(true)\n    try {\n      const loggedUser = await authServices.login(credentials)\n      setUser(loggedUser)\n      setMessage('')\n    } catch (error) {\n      if (error.response.data.error)\n        setMessage(error.response.data.error)\n      else\n        setMessage(error.response.data)\n    } finally {\n      setUserLoading(false)\n    }\n  }\n\n  const logoutUser = async () => {\n    try {\n      await authServices.logout()\n      setUser(null)\n      setMessage('Logout successful')\n    } catch (error) {\n      if (error.response.data.error)\n        setMessage(error.response.data.error)\n      else\n        setMessage(error.response.data)\n    }\n  }\n\n  return (\n    <Router>\n      <Header loading={userLoading} user={user} logout={logoutUser} />\n      <Notification message={message} />\n      { userLoading\n        ? <Skeleton height=\"50px\" />\n        : <AppSwitch user={user} loginUser={loginUser} errorHandler={errorHandler} />\n      }\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nimport App from './App'\n\nReactDOM.render(\n  <ChakraProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}